"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[616],{8930:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>l,toc:()=>t});var s=i(4848),c=i(8453);const r={id:"commands",title:"Commands",type:"reference"},a="Commands",l={id:"api-reference/commands",title:"Commands",description:"- lerna add-caching",source:"@site/docs/api-reference/commands.md",sourceDirName:"api-reference",slug:"/api-reference/commands",permalink:"/docs/api-reference/commands",draft:!1,unlisted:!1,editUrl:"https://github.com/lerna/lerna/tree/main/website/docs/api-reference/commands.md",tags:[],version:"current",frontMatter:{id:"commands",title:"Commands",type:"reference"},sidebar:"main",previous:{title:"Using pnpm with Lerna",permalink:"/docs/recipes/using-pnpm-with-lerna"},next:{title:"Configuration",permalink:"/docs/api-reference/configuration"}},d={},t=[{value:"Filter Options",id:"filter-options",level:2},{value:"Options",id:"options",level:2},{value:"<code>--scope &lt;glob&gt;</code>",id:"--scope-glob",level:3},{value:"<strong>Running with <code>npx</code></strong>",id:"running-with-npx",level:3},{value:"<code>--ignore &lt;glob&gt;</code>",id:"--ignore-glob",level:3},{value:"<code>--no-private</code>",id:"--no-private",level:3},{value:"<code>--since [ref]</code>",id:"--since-ref",level:3},{value:"<code>--exclude-dependents</code>",id:"--exclude-dependents",level:3},{value:"<code>--include-dependents</code>",id:"--include-dependents",level:3},{value:"<code>--include-dependencies</code>",id:"--include-dependencies",level:3},{value:"<code>--include-merged-tags</code>",id:"--include-merged-tags",level:3},{value:"Limitations",id:"limitations",level:2}];function o(e){const n={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,c.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"commands",children:"Commands"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/lerna/lerna/tree/main/packages/lerna/src/commands/add-caching#readme",children:(0,s.jsx)(n.code,{children:"lerna add-caching"})})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/lerna/lerna/tree/main/libs/commands/changed#readme",children:(0,s.jsx)(n.code,{children:"lerna changed"})})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/lerna/lerna/tree/main/libs/commands/clean#readme",children:(0,s.jsx)(n.code,{children:"lerna clean"})})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/lerna/lerna/tree/main/libs/commands/create#readme",children:(0,s.jsx)(n.code,{children:"lerna create"})})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/lerna/lerna/tree/main/libs/commands/diff#readme",children:(0,s.jsx)(n.code,{children:"lerna diff"})})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/lerna/lerna/tree/main/libs/commands/exec#readme",children:(0,s.jsx)(n.code,{children:"lerna exec"})})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/lerna/lerna/tree/main/libs/commands/import#readme",children:(0,s.jsx)(n.code,{children:"lerna import"})})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/lerna/lerna/tree/main/libs/commands/info#readme",children:(0,s.jsx)(n.code,{children:"lerna info"})})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/lerna/lerna/tree/main/libs/commands/init#readme",children:(0,s.jsx)(n.code,{children:"lerna init"})})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/lerna/lerna/tree/main/libs/commands/list#readme",children:(0,s.jsx)(n.code,{children:"lerna list"})})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/lerna/lerna/tree/main/libs/commands/publish#readme",children:(0,s.jsx)(n.code,{children:"lerna publish"})})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/lerna/lerna/tree/main/packages/lerna/src/commands/repair#readme",children:(0,s.jsx)(n.code,{children:"lerna repair"})})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/lerna/lerna/tree/main/libs/commands/run#readme",children:(0,s.jsx)(n.code,{children:"lerna run"})})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/lerna/lerna/tree/main/libs/commands/version#readme",children:(0,s.jsx)(n.code,{children:"lerna version"})})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/lerna/lerna/tree/main/packages/lerna/src/commands/watch#readme",children:(0,s.jsx)(n.code,{children:"lerna watch"})})}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"filter-options",children:"Filter Options"}),"\n",(0,s.jsx)(n.p,{children:"Lerna commands can have filter options applied to control which packages they operate on."}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"Options for lerna sub-commands that need filtering"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Install ",(0,s.jsx)(n.a,{href:"https://www.npmjs.com/package/lerna",children:"lerna"})," for access to the ",(0,s.jsx)(n.code,{children:"lerna"})," CLI."]}),"\n",(0,s.jsx)(n.h2,{id:"options",children:"Options"}),"\n",(0,s.jsx)(n.h3,{id:"--scope-glob",children:(0,s.jsx)(n.code,{children:"--scope <glob>"})}),"\n",(0,s.jsx)(n.p,{children:"Include only packages with names matching the given glob."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:'$ lerna exec --scope my-component -- ls -la\n$ lerna run --scope "toolbar-*" test\n$ lerna run --scope package-1 --scope "*-2" lint\n'})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Note:"})," For certain globs, it may be necessary to quote the option argument to avoid premature shell expansion."]}),"\n",(0,s.jsx)(n.h3,{id:"running-with-npx",children:(0,s.jsxs)(n.strong,{children:["Running with ",(0,s.jsx)(n.code,{children:"npx"})]})}),"\n",(0,s.jsxs)(n.p,{children:["When running ",(0,s.jsx)(n.code,{children:"lerna"})," with ",(0,s.jsx)(n.code,{children:"npx"}),', it is necessary to use an explicit "=" when passing glob arguments. This is to prevent ',(0,s.jsx)(n.code,{children:"npx"})," from prematurely expanding the arguments."]}),"\n",(0,s.jsx)(n.p,{children:"For example:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:'$ npx lerna run --scope="toolbar-*" test\n$ npx lerna run --scope="package-{1,2,5}" test\n'})}),"\n",(0,s.jsx)(n.h3,{id:"--ignore-glob",children:(0,s.jsx)(n.code,{children:"--ignore <glob>"})}),"\n",(0,s.jsx)(n.p,{children:"Exclude packages with names matching the given glob."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:'$ lerna exec --ignore "package-{1,2,5}"  -- ls -la\n$ lerna run --ignore package-1 test\n$ lerna run --ignore "package-@(1|2)" --ignore package-3 lint\n'})}),"\n",(0,s.jsxs)(n.p,{children:["More examples of filtering can be found ",(0,s.jsx)(n.a,{href:"https://github.com/lerna/lerna/blob/c0a750e0f482c16dda2f922f235861283efbe94d/commands/list/__tests__/list-command.test.js#L305-L356",children:"here"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"--no-private",children:(0,s.jsx)(n.code,{children:"--no-private"})}),"\n",(0,s.jsx)(n.p,{children:"Exclude private packages. They are included by default."}),"\n",(0,s.jsx)(n.h3,{id:"--since-ref",children:(0,s.jsx)(n.code,{children:"--since [ref]"})}),"\n",(0,s.jsxs)(n.p,{children:["Only include packages that have been changed since the specified ",(0,s.jsx)(n.code,{children:"ref"}),". If no ref is passed, it defaults to the most-recent tag."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"# List the contents of packages that have changed since the latest tag\n$ lerna exec --since -- ls -la\n\n# Run the tests for all packages that have changed since `main`\n$ lerna run test --since main\n\n# List all packages that have changed since `some-branch`\n$ lerna ls --since some-branch\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsxs)(n.em,{children:["This can be particularly useful when used in CI, if you can obtain the target branch a PR will be going into, because you can use that as the ",(0,s.jsx)(n.code,{children:"ref"})," to the ",(0,s.jsx)(n.code,{children:"--since"})," option. This works well for PRs going into the default branch as well as feature branches."]})}),"\n",(0,s.jsx)(n.h3,{id:"--exclude-dependents",children:(0,s.jsx)(n.code,{children:"--exclude-dependents"})}),"\n",(0,s.jsxs)(n.p,{children:["Exclude all transitive dependents when running a command with ",(0,s.jsx)(n.code,{children:"--since"}),', overriding the default "changed" algorithm.']}),"\n",(0,s.jsxs)(n.p,{children:["This flag has no effect without ",(0,s.jsx)(n.code,{children:"--since"}),", and will throw an error in that case."]}),"\n",(0,s.jsx)(n.h3,{id:"--include-dependents",children:(0,s.jsx)(n.code,{children:"--include-dependents"})}),"\n",(0,s.jsxs)(n.p,{children:["Include all transitive dependents when running a command regardless of ",(0,s.jsx)(n.code,{children:"--scope"}),", ",(0,s.jsx)(n.code,{children:"--ignore"}),", or ",(0,s.jsx)(n.code,{children:"--since"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"--include-dependencies",children:(0,s.jsx)(n.code,{children:"--include-dependencies"})}),"\n",(0,s.jsxs)(n.p,{children:["Include all transitive dependencies when running a command regardless of ",(0,s.jsx)(n.code,{children:"--scope"}),", ",(0,s.jsx)(n.code,{children:"--ignore"}),", or ",(0,s.jsx)(n.code,{children:"--since"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["Used in combination with any command that accepts ",(0,s.jsx)(n.code,{children:"--scope"})," (",(0,s.jsx)(n.code,{children:"bootstrap"}),", ",(0,s.jsx)(n.code,{children:"clean"}),", ",(0,s.jsx)(n.code,{children:"ls"}),", ",(0,s.jsx)(n.code,{children:"run"}),", ",(0,s.jsx)(n.code,{children:"exec"}),").\nEnsures that all dependencies (and dev dependencies) of any scoped packages (either through ",(0,s.jsx)(n.code,{children:"--scope"})," or ",(0,s.jsx)(n.code,{children:"--ignore"}),") are operated on as well."]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["Note: This will override the ",(0,s.jsx)(n.code,{children:"--scope"})," and ",(0,s.jsx)(n.code,{children:"--ignore"})," flags."]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["i.e. A package matched by the ",(0,s.jsx)(n.code,{children:"--ignore"})," flag will still be bootstrapped if it is depended on by another package that is being bootstrapped."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:'This is useful for situations where you want to "set up" a single package that relies on other packages being set up.'}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"$ lerna bootstrap --scope my-component --include-dependencies\n# my-component and all of its dependencies will be bootstrapped\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:'$ lerna bootstrap --scope "package-*" --ignore "package-util-*" --include-dependencies\n# all packages matching "package-util-*" will be ignored unless they are\n# depended upon by a package whose name matches "package-*"\n'})}),"\n",(0,s.jsx)(n.h3,{id:"--include-merged-tags",children:(0,s.jsx)(n.code,{children:"--include-merged-tags"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"$ lerna exec --since --include-merged-tags -- ls -la\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Include tags from merged branches when running a command with ",(0,s.jsx)(n.code,{children:"--since"}),". This is only useful if you do a lot of publishing from feature branches, which is not generally recommended."]}),"\n",(0,s.jsx)(n.h2,{id:"limitations",children:"Limitations"}),"\n",(0,s.jsxs)(n.p,{children:["Even though you can run Lerna without installing the project dependencies first, for instance with ",(0,s.jsx)(n.a,{href:"https://pnpm.io/cli/dlx",children:"pnpm dlx"})," or ",(0,s.jsx)(n.a,{href:"https://www.npmjs.com/package/npx",children:"npx"}),", it is not recommended. The command may work, but its output may not be 100% accurate. See ",(0,s.jsx)(n.a,{href:"https://github.com/lerna/lerna/issues/3807#issuecomment-1686841507",children:"this issue"})," for more details."]})]})}function h(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>l});var s=i(6540);const c={},r=s.createContext(c);function a(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:a(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);