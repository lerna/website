"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[48],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),m=o,h=u["".concat(s,".").concat(m)]||u[m]||d[m]||a;return n?r.createElement(h,i(i({ref:t},c),{},{components:n})):r.createElement(h,i({ref:t},c))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var p=2;p<a;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},8377:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var r=n(7462),o=(n(7294),n(3905));const a={},i="Lerna 6: Obsolete Options",l={unversionedId:"lerna6-obsolete-options",id:"lerna6-obsolete-options",title:"Lerna 6: Obsolete Options",description:"Nx and Lerna work together seamlessly in the same workspace.",source:"@site/docs/lerna6-obsolete-options.md",sourceDirName:".",slug:"/lerna6-obsolete-options",permalink:"/docs/lerna6-obsolete-options",draft:!1,editUrl:"https://github.com/lerna/lerna/tree/main/website/docs/lerna6-obsolete-options.md",tags:[],version:"current",frontMatter:{},sidebar:"main",previous:{title:"FAQ",permalink:"/docs/faq"},next:{title:"Troubleshooting",permalink:"/docs/troubleshooting"}},s={},p=[{value:"Obsolete Options",id:"obsolete-options",level:2},{value:"<code>--sort</code> and <code>--no-sort</code>",id:"--sort-and---no-sort",level:3},{value:"<code>--parallel</code>",id:"--parallel",level:3},{value:"<code>--include-dependencies</code>",id:"--include-dependencies",level:3},{value:"<code>--ignore</code>",id:"--ignore",level:3}],c={toc:p};function d(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"lerna-6-obsolete-options"},"Lerna 6: Obsolete Options"),(0,o.kt)("p",null,"Nx and Lerna work together seamlessly in the same workspace."),(0,o.kt)("p",null,"When Lerna is running tasks with Nx and detects Nx target configuration, Lerna will respect this configuration during ",(0,o.kt)("inlineCode",{parentName:"p"},"lerna run"),"\nand delegate dependency detection to the Nx task runner."),(0,o.kt)("p",null,"Nx will run tasks in an order and with a concurrency that it determines appropriate based on the task graph that it\ncreates. For more information,\nsee ",(0,o.kt)("a",{parentName:"p",href:"https://nx.dev/concepts/mental-model#the-task-graph"},"Nx Mental Model: The Task Graph"),"."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"This behavior allows Nx to run tasks in the most efficient way possible, but it also means that some existing options\nfor ",(0,o.kt)("inlineCode",{parentName:"strong"},"lerna run")," become obsolete.\n")),(0,o.kt)("h2",{id:"obsolete-options"},"Obsolete Options"),(0,o.kt)("h3",{id:"--sort-and---no-sort"},(0,o.kt)("inlineCode",{parentName:"h3"},"--sort")," and ",(0,o.kt)("inlineCode",{parentName:"h3"},"--no-sort")),(0,o.kt)("p",null,"When Nx targets are configured, Lerna will always run tasks in the order it deems is correct based on its knowledge of\nproject and task dependencies, so ",(0,o.kt)("inlineCode",{parentName:"p"},"--sort")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"--no-sort")," have no effect."),(0,o.kt)("h3",{id:"--parallel"},(0,o.kt)("inlineCode",{parentName:"h3"},"--parallel")),(0,o.kt)("p",null,"Lerna will use the task graph to determine which tasks can be run in parallel and do so automatically, so ",(0,o.kt)("inlineCode",{parentName:"p"},"--parallel"),"\nhas no effect."),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"If you want to limit the concurrency of tasks, you can still use\nthe ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/lerna/lerna/blob/6cb8ab2d4af7ce25c812e8fb05cd04650105705f/core/global-options/README.md#--concurrency"},"concurrency global option"),"\nto accomplish this.")),(0,o.kt)("h3",{id:"--include-dependencies"},(0,o.kt)("inlineCode",{parentName:"h3"},"--include-dependencies")),(0,o.kt)("p",null,"Lerna 6 will automatically run dependent tasks first when necessary, so ",(0,o.kt)("inlineCode",{parentName:"p"},"--include-dependencies")," is obsolete. However,\nthe flag can still be used to include tasks that are not required (e.g., running the tests of all the dependent\nprojects)."),(0,o.kt)("h3",{id:"--ignore"},(0,o.kt)("inlineCode",{parentName:"h3"},"--ignore")),(0,o.kt)("p",null,"When used with Nx, ",(0,o.kt)("inlineCode",{parentName:"p"},"--ignore")," will never cause ",(0,o.kt)("inlineCode",{parentName:"p"},"lerna run")," to exclude any tasks that are deemed to be\nrequired ",(0,o.kt)("a",{parentName:"p",href:"https://nx.dev/concepts/mental-model#the-task-graph"},"task graph"),"."),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"The effects on the options above will only apply if:"),(0,o.kt)("ol",{parentName:"admonition"},(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("inlineCode",{parentName:"li"},"nx.json")," exists in the root with the ",(0,o.kt)("inlineCode",{parentName:"li"},"targetDefaults")," property\ndefined."),(0,o.kt)("li",{parentName:"ol"},"The ",(0,o.kt)("inlineCode",{parentName:"li"},'"nx"')," property is found in the package.json of a target package.")),(0,o.kt)("p",{parentName:"admonition"},"Otherwise, they will behave just as they would with Lerna's legacy task runner (if ",(0,o.kt)("inlineCode",{parentName:"p"},"useNx")," is ",(0,o.kt)("inlineCode",{parentName:"p"},"false"),").")))}d.isMDXComponent=!0}}]);