"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[351],{2651:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>t,metadata:()=>o,toc:()=>c});var r=s(4848),a=s(8453);const t={id:"run-tasks",title:"Run Tasks",type:"explainer"},i="Run Tasks",o={id:"features/run-tasks",title:"Run Tasks",description:"Monorepos can have hundreds or even thousands of projects, so being able to run npm scripts against all (or some) of",source:"@site/docs/features/run-tasks.md",sourceDirName:"features",slug:"/features/run-tasks",permalink:"/docs/features/run-tasks",draft:!1,unlisted:!1,editUrl:"https://github.com/lerna/lerna/tree/main/website/docs/features/run-tasks.md",tags:[],version:"current",frontMatter:{id:"run-tasks",title:"Run Tasks",type:"explainer"},sidebar:"main",previous:{title:"Features",permalink:"/docs/features"},next:{title:"Cache Task Results",permalink:"/docs/features/cache-tasks"}},l={},c=[{value:"Definitions",id:"definitions",level:2},{value:"Example Repository",id:"example-repository",level:2},{value:"Run Everything",id:"run-everything",level:2},{value:"Run a Multiple Tasks concurrently",id:"run-a-multiple-tasks-concurrently",level:2},{value:"Run a Task for a single Package",id:"run-a-task-for-a-single-package",level:2},{value:"Run Tasks Affected by a PR",id:"run-tasks-affected-by-a-pr",level:2},{value:"Control How Tasks Run",id:"control-how-tasks-run",level:2},{value:"Automatic loading of <code>.env</code> files",id:"automatic-loading-of-env-files",level:2}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"run-tasks",children:"Run Tasks"})}),"\n",(0,r.jsx)(n.p,{children:"Monorepos can have hundreds or even thousands of projects, so being able to run npm scripts against all (or some) of\nthem is a key feature of a tool like Lerna."}),"\n",(0,r.jsx)(n.h2,{id:"definitions",children:"Definitions"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Command -"})," anything the developer types into the terminal (e.g., ",(0,r.jsx)(n.code,{children:"lerna run build --scope=header --concurrency=5"}),")."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Target -"})," the name of an npm script (e.g., ",(0,r.jsx)(n.code,{children:"build"}),")."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Task -"})," an invocation of an npm script (e.g., ",(0,r.jsx)(n.code,{children:"header:build"}),")."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"example-repository",children:"Example Repository"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:["Examples are based on ",(0,r.jsx)(n.a,{href:"https://github.com/lerna/getting-started-example",children:"this repository"}),", so feel free to clone it\nand follow along."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"run-everything",children:"Run Everything"}),"\n",(0,r.jsxs)(n.p,{children:["Each project has the ",(0,r.jsx)(n.code,{children:"test"})," and ",(0,r.jsx)(n.code,{children:"build"})," scripts defined."]}),"\n",(0,r.jsx)(n.p,{children:"Run:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npx lerna run build\n"})}),"\n",(0,r.jsxs)(n.p,{children:["This will build the projects in the right order: ",(0,r.jsx)(n.code,{children:"footer"})," and ",(0,r.jsx)(n.code,{children:"header"})," and then ",(0,r.jsx)(n.code,{children:"remixapp"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:'title="Terminal Output"',children:"    \u2714  header:build (501ms)\n    \u2714  footer:build (503ms)\n    \u2714  remixapp:build (670ms)\n\n \u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n Lerna (powered by Nx)   Successfully ran target build for 3 projects (1s)\n\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Note that Lerna doesn't care what each of the build scripts does. The name ",(0,r.jsx)(n.code,{children:"build"})," is also ",(0,r.jsx)(n.strong,{children:"not"})," special: it's simply\nthe name of the npm script."]}),"\n",(0,r.jsx)(n.h2,{id:"run-a-multiple-tasks-concurrently",children:"Run a Multiple Tasks concurrently"}),"\n",(0,r.jsx)(n.p,{children:"You can pass a comma-delimited list of targets you wish to trigger to run concurrently."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npx lerna run test,build,lint\n"})}),"\n",(0,r.jsxs)(n.p,{children:["If, for example, there are dependencies between your tasks, such as ",(0,r.jsx)(n.code,{children:"build"})," needing to run before ",(0,r.jsx)(n.code,{children:"test"})," for particular packages, the task-runner will coordinate that for you as long as you have configured an appropriate ",(0,r.jsx)(n.a,{href:"../concepts/task-pipeline-configuration",children:"Task Pipeline Configuration"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"run-a-task-for-a-single-package",children:"Run a Task for a single Package"}),"\n",(0,r.jsxs)(n.p,{children:["While developing you rarely run all the builds or all the tests. Instead, you often run things only against the projects\nyou are changing. For instance, you can run the ",(0,r.jsx)(n.code,{children:"header"})," tests like this:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npx lerna run test --scope=header\n"})}),"\n",(0,r.jsx)(n.h2,{id:"run-tasks-affected-by-a-pr",children:"Run Tasks Affected by a PR"}),"\n",(0,r.jsx)(n.p,{children:"You can also run a command for all the projects affected in your PR like this:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npx lerna run test --since=origin/main\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Learn more ",(0,r.jsx)(n.a,{href:"../api-reference/commands",children:"here"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"control-how-tasks-run",children:"Control How Tasks Run"}),"\n",(0,r.jsxs)(n.p,{children:["For more control over the order tasks are executed, edit the ",(0,r.jsx)(n.a,{href:"../concepts/task-pipeline-configuration",children:"Task Pipeline Configuration"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["To speed up your task execution, learn how to ",(0,r.jsx)(n.a,{href:"./cache-tasks",children:"Cache Task Results"})," and ",(0,r.jsx)(n.a,{href:"./distribute-tasks",children:"Distribute Task Execution"}),"."]}),"\n",(0,r.jsxs)(n.h2,{id:"automatic-loading-of-env-files",children:["Automatic loading of ",(0,r.jsx)(n.code,{children:".env"})," files"]}),"\n",(0,r.jsxs)(n.p,{children:["By default the modern task runner powered by Nx will automatically load ",(0,r.jsx)(n.code,{children:".env"})," files for you. You can set ",(0,r.jsx)(n.code,{children:"--load-env-files"})," to false if you want to disable this behavior for any reason."]}),"\n",(0,r.jsxs)(n.p,{children:["For more details about what ",(0,r.jsx)(n.code,{children:".env"})," files will be loaded by default please see: ",(0,r.jsx)(n.a,{href:"https://nx.dev/recipes/environment-variables/define-environment-variables",children:"https://nx.dev/recipes/environment-variables/define-environment-variables"})]})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>o});var r=s(6540);const a={},t=r.createContext(a);function i(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);