"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[840],{468:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>h,frontMatter:()=>a,metadata:()=>o,toc:()=>d});var i=t(7624),r=t(2172);const a={id:"getting-started",title:"Getting Started",type:"tutorial"},s="Getting Started",o={id:"getting-started",title:"Getting Started",description:"Lerna comes with a dedicated init command to assist you with both adding lerna to an existing repo, or creating one from scratch.",source:"@site/docs/getting-started.md",sourceDirName:".",slug:"/getting-started",permalink:"/docs/getting-started",draft:!1,unlisted:!1,editUrl:"https://github.com/lerna/lerna/tree/main/website/docs/getting-started.md",tags:[],version:"current",frontMatter:{id:"getting-started",title:"Getting Started",type:"tutorial"},sidebar:"main",previous:{title:"Introduction",permalink:"/docs/introduction"},next:{title:"Lerna and Nx",permalink:"/docs/lerna-and-nx"}},c={},d=[{value:"Starting from scratch",id:"starting-from-scratch",level:2},{value:"Adding lerna to an existing repo",id:"adding-lerna-to-an-existing-repo",level:2}];function l(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.M)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"getting-started",children:"Getting Started"}),"\n",(0,i.jsx)("iframe",{width:"690",height:"400",src:"https://www.youtube.com/embed/hRe-_GCMfYQ",title:"YouTube video player",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; fullscreen",allowfullscreen:!0}),"\n",(0,i.jsxs)(n.p,{children:["Lerna comes with a dedicated ",(0,i.jsx)(n.code,{children:"init"})," command to assist you with both adding lerna to an existing repo, or creating one from scratch."]}),"\n",(0,i.jsx)(n.h2,{id:"starting-from-scratch",children:"Starting from scratch"}),"\n",(0,i.jsxs)(n.p,{children:["In the simplest case, ",(0,i.jsx)(n.code,{children:"lerna init"})," can be used to create a new repository in an empty directory. For that, we can run the following commands:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Create an empty directory\nmkdir ./new-lerna-workspace\n# Change into the new directory\ncd ./new-lerna-workspace\n# Initialize lerna (using --dryRun to preview the changes)\nnpx lerna init --dryRun\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Note that we have passed the ",(0,i.jsx)(n.code,{children:"--dryRun"})," flag here, this allows us to see a preview of the changes that ",(0,i.jsx)(n.code,{children:"lerna init"})," will make to our file system. This allows us to tweak the values of any other arguments we pass to ",(0,i.jsx)(n.code,{children:"lerna init"})," (such as ",(0,i.jsx)(n.code,{children:"--exact"})," or ",(0,i.jsx)(n.code,{children:"--independent"}),") without having to worry about undoing any mistakes."]}),"\n",(0,i.jsxs)(n.p,{children:["Once we are happy with the changes it will make, we can simply repeat the ",(0,i.jsx)(n.code,{children:"npx lerna init"})," command but leave off the ",(0,i.jsx)(n.code,{children:"--dryRun"})," flag."]}),"\n",(0,i.jsx)(n.p,{children:"You will now be up and running with a working git repository, including npm workspaces, with lerna available to create, version and publish any packages you wish to develop."}),"\n",(0,i.jsx)(n.h2,{id:"adding-lerna-to-an-existing-repo",children:"Adding lerna to an existing repo"}),"\n",(0,i.jsxs)(n.p,{children:["If you already have an existing repo, you can still add ",(0,i.jsx)(n.code,{children:"lerna"})," to it using ",(0,i.jsx)(n.code,{children:"lerna init"}),"."]}),"\n",(0,i.jsxs)(n.admonition,{type:"info",children:[(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Lerna is not responsible for installing and linking your dependencies"})," in your repo, your package manager is much better suited to that task."]}),(0,i.jsxs)(n.p,{children:["Instead, we strongly recommend configuring your package manager of choice to use its ",(0,i.jsx)(n.code,{children:"workspaces"})," feature:"]}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"npm"})," (",(0,i.jsx)(n.a,{href:"https://docs.npmjs.com/cli/using-npm/workspaces",children:"https://docs.npmjs.com/cli/using-npm/workspaces"}),")"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"yarn"})," (",(0,i.jsx)(n.a,{href:"https://yarnpkg.com/features/workspaces",children:"https://yarnpkg.com/features/workspaces"}),")"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"pnpm"})," (",(0,i.jsx)(n.a,{href:"https://pnpm.io/workspaces",children:"https://pnpm.io/workspaces"}),")"]}),"\n"]})]}),"\n",(0,i.jsxs)(n.p,{children:["When initializing lerna on an existing repo, it will need a way to know what packages it should operate on. If you are using your package manager's ",(0,i.jsx)(n.code,{children:"workspaces"})," feature (see note above), then lerna will default to using the ",(0,i.jsx)(n.code,{children:"workspaces"})," patterns you have already configured. No extra arguments are required."]}),"\n",(0,i.jsxs)(n.p,{children:["Alternatively, you can manually specify a set of patterns to match against instead by using the ",(0,i.jsx)(n.code,{children:"--packages"})," flag for ",(0,i.jsx)(n.code,{children:"lerna init"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'# Passing a single pattern\nnpx lerna init --packages="packages/*"\n# Passing multiple patterns\nnpx lerna init --packages="foo/*" --packages="bar/*"\n'})})]})}function h(e={}){const{wrapper:n}={...(0,r.M)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},2172:(e,n,t)=>{t.d(n,{I:()=>o,M:()=>s});var i=t(1504);const r={},a=i.createContext(r);function s(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);