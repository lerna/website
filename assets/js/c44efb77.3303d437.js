"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[629],{4954:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>i,default:()=>h,frontMatter:()=>r,metadata:()=>l,toc:()=>d});var o=t(4848),s=t(8453);const r={},i="Lerna 6: Obsolete Options",l={id:"lerna6-obsolete-options",title:"Lerna 6: Obsolete Options",description:"Nx and Lerna work together seamlessly in the same workspace.",source:"@site/docs/lerna6-obsolete-options.md",sourceDirName:".",slug:"/lerna6-obsolete-options",permalink:"/docs/lerna6-obsolete-options",draft:!1,unlisted:!1,editUrl:"https://github.com/lerna/lerna/tree/main/website/docs/lerna6-obsolete-options.md",tags:[],version:"current",frontMatter:{},sidebar:"main",previous:{title:"FAQ",permalink:"/docs/faq"},next:{title:"Troubleshooting",permalink:"/docs/troubleshooting"}},a={},d=[{value:"Obsolete Options",id:"obsolete-options",level:2},{value:"<code>--sort</code> and <code>--no-sort</code>",id:"--sort-and---no-sort",level:3},{value:"<code>--parallel</code>",id:"--parallel",level:3},{value:"<code>--include-dependencies</code>",id:"--include-dependencies",level:3},{value:"<code>--ignore</code>",id:"--ignore",level:3}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"lerna-6-obsolete-options",children:"Lerna 6: Obsolete Options"})}),"\n",(0,o.jsx)(n.p,{children:"Nx and Lerna work together seamlessly in the same workspace."}),"\n",(0,o.jsxs)(n.p,{children:["When Lerna is running tasks with Nx and detects Nx target configuration, Lerna will respect this configuration during ",(0,o.jsx)(n.code,{children:"lerna run"}),"\nand delegate dependency detection to the Nx task runner."]}),"\n",(0,o.jsxs)(n.p,{children:["Nx will run tasks in an order and with a concurrency that it determines appropriate based on the task graph that it\ncreates. For more information,\nsee ",(0,o.jsx)(n.a,{href:"https://nx.dev/concepts/mental-model#the-task-graph",children:"Nx Mental Model: The Task Graph"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:["**This behavior allows Nx to run tasks in the most efficient way possible, but it also means that some existing options\nfor ",(0,o.jsx)(n.code,{children:"lerna run"})," become obsolete.\n**"]}),"\n",(0,o.jsx)(n.h2,{id:"obsolete-options",children:"Obsolete Options"}),"\n",(0,o.jsxs)(n.h3,{id:"--sort-and---no-sort",children:[(0,o.jsx)(n.code,{children:"--sort"})," and ",(0,o.jsx)(n.code,{children:"--no-sort"})]}),"\n",(0,o.jsxs)(n.p,{children:["When Nx targets are configured, Lerna will always run tasks in the order it deems is correct based on its knowledge of\nproject and task dependencies, so ",(0,o.jsx)(n.code,{children:"--sort"})," and ",(0,o.jsx)(n.code,{children:"--no-sort"})," have no effect."]}),"\n",(0,o.jsx)(n.h3,{id:"--parallel",children:(0,o.jsx)(n.code,{children:"--parallel"})}),"\n",(0,o.jsxs)(n.p,{children:["Lerna will use the task graph to determine which tasks can be run in parallel and do so automatically, so ",(0,o.jsx)(n.code,{children:"--parallel"}),"\nhas no effect."]}),"\n",(0,o.jsx)(n.admonition,{type:"note",children:(0,o.jsxs)(n.p,{children:["If you want to limit the concurrency of tasks, you can still use\nthe ",(0,o.jsx)(n.a,{href:"https://github.com/lerna/lerna/blob/6cb8ab2d4af7ce25c812e8fb05cd04650105705f/core/global-options/README.md#--concurrency",children:"concurrency global option"}),"\nto accomplish this."]})}),"\n",(0,o.jsx)(n.h3,{id:"--include-dependencies",children:(0,o.jsx)(n.code,{children:"--include-dependencies"})}),"\n",(0,o.jsxs)(n.p,{children:["Lerna 6 will automatically run dependent tasks first when necessary, so ",(0,o.jsx)(n.code,{children:"--include-dependencies"})," is obsolete. However,\nthe flag can still be used to include tasks that are not required (e.g., running the tests of all the dependent\nprojects)."]}),"\n",(0,o.jsx)(n.h3,{id:"--ignore",children:(0,o.jsx)(n.code,{children:"--ignore"})}),"\n",(0,o.jsxs)(n.p,{children:["When used with Nx, ",(0,o.jsx)(n.code,{children:"--ignore"})," will never cause ",(0,o.jsx)(n.code,{children:"lerna run"})," to exclude any tasks that are deemed to be\nrequired ",(0,o.jsx)(n.a,{href:"https://nx.dev/concepts/mental-model#the-task-graph",children:"task graph"}),"."]}),"\n",(0,o.jsxs)(n.admonition,{type:"tip",children:[(0,o.jsx)(n.p,{children:"The effects on the options above will only apply if:"}),(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"nx.json"})," exists in the root with the ",(0,o.jsx)(n.code,{children:"targetDefaults"})," property\ndefined."]}),"\n",(0,o.jsxs)(n.li,{children:["The ",(0,o.jsx)(n.code,{children:'"nx"'})," property is found in the package.json of a target package."]}),"\n"]}),(0,o.jsxs)(n.p,{children:["Otherwise, they will behave just as they would with Lerna's legacy task runner (if ",(0,o.jsx)(n.code,{children:"useNx"})," is ",(0,o.jsx)(n.code,{children:"false"}),")."]})]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>l});var o=t(6540);const s={},r=o.createContext(s);function i(e){const n=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);